import { GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";

import { GameBoard } from "../../components/GameBoard";
import { Header } from "../../components/Header";
import { Options } from "../../components/Options";
import { GameBoardModel } from "../../models/GameBoardModel";
import { GameModel } from "../../models/GameModel";
import { OptionsModel } from "../../models/OptionsModel";

type GamePageProps = {
  id: string;
};

export default function GamePage({ id }: GamePageProps) {
  const [code, setCode] = useState<number[]>();

  useEffect(() => {
    console.log("USEEFFECT");
    async function fetchData() {
      const response = await fetch(
        "https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new"
      );
      const text = await response.text();
      const integers = text.split("\n").map((intString) => parseInt(intString));
      integers.pop();
      setCode(integers);
    }

    fetchData();
  }, [setCode]);

  const options = new OptionsModel(8);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="mx-auto w-[500px] space-y-2">
        <div className="flex justify-center">{code ? code : "Loading..."}</div>
        {code ? (
          <GameBoard game={new GameModel(4, 10, options, code, id)} />
        ) : (
          <GameBoard
            game={new GameModel(4, 10, options, [-1, -1, -1, -1], id)}
            loading
          />
        )}
        <Options options={options} />
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<
  GamePageProps,
  { id: string }
> = async ({ params }) => {
  const id = params?.id ?? "";

  return { props: { id } };
};
