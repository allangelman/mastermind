import { GraphQLClient, gql } from "graphql-request";
import { GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

import { v4 as uuidv4 } from "uuid";
import { GameModel } from "../models/GameModel";
import { OptionsModel } from "../models/OptionsModel";

type GamePageProps = {
  game_id: string;
  board_id: string;
};

export default function Home({ game_id, board_id }: GamePageProps) {
  const router = useRouter();

  useEffect(() => {
    router.push(`/game/${game_id}?boardId=${board_id}`);
  }, [router]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<
  GamePageProps
> = async () => {
  const response = await fetch(
    "https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new"
  );
  const codeWithNewLines = await response.text();
  const codeArray = codeWithNewLines.split("\n");
  const code = codeArray.join("");

  const endpoint = " https://mastermind-api.onrender.com/graphql";

  const graphQLClient = new GraphQLClient(endpoint);

  const mutation = gql`
    mutation createGame($createGameInput: CreateGameInput!) {
      createGame(createGameInput: $createGameInput) {
        code
        id
      }
    }
  `;

  const variables = {
    createGameInput: { code },
  };

  const data = await graphQLClient.request(mutation, variables);

  const mutation2 = gql`
    mutation createGameBoard($createGameBoardInput: CreateGameBoardInput!) {
      createGameBoard(createGameBoardInput: $createGameBoardInput) {
        id
      }
    }
  `;

  const variables2 = {
    createGameBoardInput: { game_id: data.createGame.id },
  };

  const data2 = await graphQLClient.request(mutation2, variables2);
  // console.log("DATAA2222: ", data2);

  return {
    props: { game_id: data.createGame.id, board_id: data2.createGameBoard.id },
  };
};
